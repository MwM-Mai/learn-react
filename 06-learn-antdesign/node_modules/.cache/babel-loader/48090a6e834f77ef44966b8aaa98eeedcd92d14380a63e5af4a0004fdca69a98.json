{"ast":null,"code":"import camelCase from 'lodash.camelcase';\nimport upperFirst from 'lodash.upperfirst';\nimport warning from \"../_util/warning\"; // These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\n\nexport var svgBaseProps = {\n  width: '1em',\n  height: '1em',\n  fill: 'currentColor',\n  'aria-hidden': true,\n  focusable: 'false'\n}; // moved from https://github.com/ant-design/ant-design/blob/master/components/icon/utils.ts\n\nvar fillTester = /-fill$/;\nvar outlineTester = /-o$/;\nvar twoToneTester = /-twotone$/;\nexport function getThemeFromTypeName(type) {\n  var result = null;\n  if (fillTester.test(type)) {\n    result = 'filled';\n  } else if (outlineTester.test(type)) {\n    result = 'outlined';\n  } else if (twoToneTester.test(type)) {\n    result = 'twoTone';\n  }\n  return result;\n}\nexport function removeTypeTheme(type) {\n  return type.replace(fillTester, '').replace(outlineTester, '').replace(twoToneTester, '');\n}\nvar themeMap = {\n  filled: 'filled',\n  outlined: 'outlined',\n  // default theme\n  twoTone: 'twoTone'\n};\nexport function withThemeSuffix(type, theme) {\n  var result = upperFirst(camelCase(type));\n  var realTheme = upperFirst(themeMap[theme]);\n  if (theme !== 'outlined' && !realTheme) {\n    warning(false, 'Icon', \"This icon '\".concat(type, \"' has unknown theme '\").concat(theme, \"'\"));\n  }\n  return result + realTheme;\n} // For alias or compatibility\n\nexport function alias(type) {\n  var newType = type;\n  switch (type) {\n    case 'cross':\n      newType = 'close';\n      break;\n    // https://github.com/ant-design/ant-design/issues/13007\n\n    case 'interation':\n      newType = 'interaction';\n      break;\n    // https://github.com/ant-design/ant-design/issues/16810\n\n    case 'canlendar':\n      newType = 'calendar';\n      break;\n    // https://github.com/ant-design/ant-design/issues/17448\n\n    case 'colum-height':\n      newType = 'column-height';\n      break;\n    default:\n  }\n  warning(newType === type, 'Icon', \"Icon '\".concat(type, \"' was a typo and is now deprecated, please use '\").concat(newType, \"' instead.\"));\n  return newType;\n}","map":{"version":3,"names":["camelCase","upperFirst","warning","svgBaseProps","width","height","fill","focusable","fillTester","outlineTester","twoToneTester","getThemeFromTypeName","type","result","test","removeTypeTheme","replace","themeMap","filled","outlined","twoTone","withThemeSuffix","theme","realTheme","concat","alias","newType"],"sources":["C:/Users/86188/Desktop/code-react/06-learn-antdesign/node_modules/@ant-design/compatible/es/icon/utils.js"],"sourcesContent":["import camelCase from 'lodash.camelcase';\nimport upperFirst from 'lodash.upperfirst';\nimport warning from \"../_util/warning\"; // These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\n\nexport var svgBaseProps = {\n  width: '1em',\n  height: '1em',\n  fill: 'currentColor',\n  'aria-hidden': true,\n  focusable: 'false'\n}; // moved from https://github.com/ant-design/ant-design/blob/master/components/icon/utils.ts\n\nvar fillTester = /-fill$/;\nvar outlineTester = /-o$/;\nvar twoToneTester = /-twotone$/;\nexport function getThemeFromTypeName(type) {\n  var result = null;\n\n  if (fillTester.test(type)) {\n    result = 'filled';\n  } else if (outlineTester.test(type)) {\n    result = 'outlined';\n  } else if (twoToneTester.test(type)) {\n    result = 'twoTone';\n  }\n\n  return result;\n}\nexport function removeTypeTheme(type) {\n  return type.replace(fillTester, '').replace(outlineTester, '').replace(twoToneTester, '');\n}\nvar themeMap = {\n  filled: 'filled',\n  outlined: 'outlined',\n  // default theme\n  twoTone: 'twoTone'\n};\nexport function withThemeSuffix(type, theme) {\n  var result = upperFirst(camelCase(type));\n  var realTheme = upperFirst(themeMap[theme]);\n\n  if (theme !== 'outlined' && !realTheme) {\n    warning(false, 'Icon', \"This icon '\".concat(type, \"' has unknown theme '\").concat(theme, \"'\"));\n  }\n\n  return result + realTheme;\n} // For alias or compatibility\n\nexport function alias(type) {\n  var newType = type;\n\n  switch (type) {\n    case 'cross':\n      newType = 'close';\n      break;\n    // https://github.com/ant-design/ant-design/issues/13007\n\n    case 'interation':\n      newType = 'interaction';\n      break;\n    // https://github.com/ant-design/ant-design/issues/16810\n\n    case 'canlendar':\n      newType = 'calendar';\n      break;\n    // https://github.com/ant-design/ant-design/issues/17448\n\n    case 'colum-height':\n      newType = 'column-height';\n      break;\n\n    default:\n  }\n\n  warning(newType === type, 'Icon', \"Icon '\".concat(type, \"' was a typo and is now deprecated, please use '\").concat(newType, \"' instead.\"));\n  return newType;\n}"],"mappings":"AAAA,OAAOA,SAAS,MAAM,kBAAkB;AACxC,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,OAAO,MAAM,kBAAkB,CAAC,CAAC;AACxC;;AAEA,OAAO,IAAIC,YAAY,GAAG;EACxBC,KAAK,EAAE,KAAK;EACZC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE,cAAc;EACpB,aAAa,EAAE,IAAI;EACnBC,SAAS,EAAE;AACb,CAAC,CAAC,CAAC;;AAEH,IAAIC,UAAU,GAAG,QAAQ;AACzB,IAAIC,aAAa,GAAG,KAAK;AACzB,IAAIC,aAAa,GAAG,WAAW;AAC/B,OAAO,SAASC,oBAAoBA,CAACC,IAAI,EAAE;EACzC,IAAIC,MAAM,GAAG,IAAI;EAEjB,IAAIL,UAAU,CAACM,IAAI,CAACF,IAAI,CAAC,EAAE;IACzBC,MAAM,GAAG,QAAQ;EACnB,CAAC,MAAM,IAAIJ,aAAa,CAACK,IAAI,CAACF,IAAI,CAAC,EAAE;IACnCC,MAAM,GAAG,UAAU;EACrB,CAAC,MAAM,IAAIH,aAAa,CAACI,IAAI,CAACF,IAAI,CAAC,EAAE;IACnCC,MAAM,GAAG,SAAS;EACpB;EAEA,OAAOA,MAAM;AACf;AACA,OAAO,SAASE,eAAeA,CAACH,IAAI,EAAE;EACpC,OAAOA,IAAI,CAACI,OAAO,CAACR,UAAU,EAAE,EAAE,CAAC,CAACQ,OAAO,CAACP,aAAa,EAAE,EAAE,CAAC,CAACO,OAAO,CAACN,aAAa,EAAE,EAAE,CAAC;AAC3F;AACA,IAAIO,QAAQ,GAAG;EACbC,MAAM,EAAE,QAAQ;EAChBC,QAAQ,EAAE,UAAU;EACpB;EACAC,OAAO,EAAE;AACX,CAAC;AACD,OAAO,SAASC,eAAeA,CAACT,IAAI,EAAEU,KAAK,EAAE;EAC3C,IAAIT,MAAM,GAAGZ,UAAU,CAACD,SAAS,CAACY,IAAI,CAAC,CAAC;EACxC,IAAIW,SAAS,GAAGtB,UAAU,CAACgB,QAAQ,CAACK,KAAK,CAAC,CAAC;EAE3C,IAAIA,KAAK,KAAK,UAAU,IAAI,CAACC,SAAS,EAAE;IACtCrB,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,aAAa,CAACsB,MAAM,CAACZ,IAAI,EAAE,uBAAuB,CAAC,CAACY,MAAM,CAACF,KAAK,EAAE,GAAG,CAAC,CAAC;EAChG;EAEA,OAAOT,MAAM,GAAGU,SAAS;AAC3B,CAAC,CAAC;;AAEF,OAAO,SAASE,KAAKA,CAACb,IAAI,EAAE;EAC1B,IAAIc,OAAO,GAAGd,IAAI;EAElB,QAAQA,IAAI;IACV,KAAK,OAAO;MACVc,OAAO,GAAG,OAAO;MACjB;IACF;;IAEA,KAAK,YAAY;MACfA,OAAO,GAAG,aAAa;MACvB;IACF;;IAEA,KAAK,WAAW;MACdA,OAAO,GAAG,UAAU;MACpB;IACF;;IAEA,KAAK,cAAc;MACjBA,OAAO,GAAG,eAAe;MACzB;IAEF;EAAQ;EAGVxB,OAAO,CAACwB,OAAO,KAAKd,IAAI,EAAE,MAAM,EAAE,QAAQ,CAACY,MAAM,CAACZ,IAAI,EAAE,kDAAkD,CAAC,CAACY,MAAM,CAACE,OAAO,EAAE,YAAY,CAAC,CAAC;EAC1I,OAAOA,OAAO;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}