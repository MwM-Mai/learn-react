{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { TinyColor } from '@ctrl/tinycolor';\nexport default function genColorMapToken(seed, _ref) {\n  var generateColorPalettes = _ref.generateColorPalettes,\n    generateNeutralColorPalettes = _ref.generateNeutralColorPalettes;\n  var colorSuccessBase = seed.colorSuccess,\n    colorWarningBase = seed.colorWarning,\n    colorErrorBase = seed.colorError,\n    colorInfoBase = seed.colorInfo,\n    colorPrimaryBase = seed.colorPrimary,\n    colorBgBase = seed.colorBgBase,\n    colorTextBase = seed.colorTextBase;\n  var primaryColors = generateColorPalettes(colorPrimaryBase);\n  var successColors = generateColorPalettes(colorSuccessBase);\n  var warningColors = generateColorPalettes(colorWarningBase);\n  var errorColors = generateColorPalettes(colorErrorBase);\n  var infoColors = generateColorPalettes(colorInfoBase);\n  var neutralColors = generateNeutralColorPalettes(colorBgBase, colorTextBase);\n  return _objectSpread(_objectSpread({}, neutralColors), {}, {\n    colorPrimaryBg: primaryColors[1],\n    colorPrimaryBgHover: primaryColors[2],\n    colorPrimaryBorder: primaryColors[3],\n    colorPrimaryBorderHover: primaryColors[4],\n    colorPrimaryHover: primaryColors[5],\n    colorPrimary: primaryColors[6],\n    colorPrimaryActive: primaryColors[7],\n    colorPrimaryTextHover: primaryColors[8],\n    colorPrimaryText: primaryColors[9],\n    colorPrimaryTextActive: primaryColors[10],\n    colorSuccessBg: successColors[1],\n    colorSuccessBgHover: successColors[2],\n    colorSuccessBorder: successColors[3],\n    colorSuccessBorderHover: successColors[4],\n    colorSuccessHover: successColors[5],\n    colorSuccess: successColors[6],\n    colorSuccessActive: successColors[7],\n    colorSuccessTextHover: successColors[8],\n    colorSuccessText: successColors[9],\n    colorSuccessTextActive: successColors[10],\n    colorErrorBg: errorColors[1],\n    colorErrorBgHover: errorColors[2],\n    colorErrorBorder: errorColors[3],\n    colorErrorBorderHover: errorColors[4],\n    colorErrorHover: errorColors[5],\n    colorError: errorColors[6],\n    colorErrorActive: errorColors[7],\n    colorErrorTextHover: errorColors[8],\n    colorErrorText: errorColors[9],\n    colorErrorTextActive: errorColors[10],\n    colorWarningBg: warningColors[1],\n    colorWarningBgHover: warningColors[2],\n    colorWarningBorder: warningColors[3],\n    colorWarningBorderHover: warningColors[4],\n    colorWarningHover: warningColors[5],\n    colorWarning: warningColors[6],\n    colorWarningActive: warningColors[7],\n    colorWarningTextHover: warningColors[8],\n    colorWarningText: warningColors[9],\n    colorWarningTextActive: warningColors[10],\n    colorInfoBg: infoColors[1],\n    colorInfoBgHover: infoColors[2],\n    colorInfoBorder: infoColors[3],\n    colorInfoBorderHover: infoColors[4],\n    colorInfoHover: infoColors[5],\n    colorInfo: infoColors[6],\n    colorInfoActive: infoColors[7],\n    colorInfoTextHover: infoColors[8],\n    colorInfoText: infoColors[9],\n    colorInfoTextActive: infoColors[10],\n    colorBgMask: new TinyColor('#000').setAlpha(0.45).toRgbString(),\n    colorWhite: '#fff'\n  });\n}","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","TinyColor","genColorMapToken","seed","_ref","generateColorPalettes","generateNeutralColorPalettes","colorSuccessBase","colorSuccess","colorWarningBase","colorWarning","colorErrorBase","colorError","colorInfoBase","colorInfo","colorPrimaryBase","colorPrimary","colorBgBase","colorTextBase","primaryColors","successColors","warningColors","errorColors","infoColors","neutralColors","colorPrimaryBg","colorPrimaryBgHover","colorPrimaryBorder","colorPrimaryBorderHover","colorPrimaryHover","colorPrimaryActive","colorPrimaryTextHover","colorPrimaryText","colorPrimaryTextActive","colorSuccessBg","colorSuccessBgHover","colorSuccessBorder","colorSuccessBorderHover","colorSuccessHover","colorSuccessActive","colorSuccessTextHover","colorSuccessText","colorSuccessTextActive","colorErrorBg","colorErrorBgHover","colorErrorBorder","colorErrorBorderHover","colorErrorHover","colorErrorActive","colorErrorTextHover","colorErrorText","colorErrorTextActive","colorWarningBg","colorWarningBgHover","colorWarningBorder","colorWarningBorderHover","colorWarningHover","colorWarningActive","colorWarningTextHover","colorWarningText","colorWarningTextActive","colorInfoBg","colorInfoBgHover","colorInfoBorder","colorInfoBorderHover","colorInfoHover","colorInfoActive","colorInfoTextHover","colorInfoText","colorInfoTextActive","colorBgMask","setAlpha","toRgbString","colorWhite"],"sources":["C:/Users/86188/Desktop/code-react/06-learn-antdesign/node_modules/@ant-design/compatible/es/theme/genColorMapToken.js"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { TinyColor } from '@ctrl/tinycolor';\nexport default function genColorMapToken(seed, _ref) {\n  var generateColorPalettes = _ref.generateColorPalettes,\n      generateNeutralColorPalettes = _ref.generateNeutralColorPalettes;\n  var colorSuccessBase = seed.colorSuccess,\n      colorWarningBase = seed.colorWarning,\n      colorErrorBase = seed.colorError,\n      colorInfoBase = seed.colorInfo,\n      colorPrimaryBase = seed.colorPrimary,\n      colorBgBase = seed.colorBgBase,\n      colorTextBase = seed.colorTextBase;\n  var primaryColors = generateColorPalettes(colorPrimaryBase);\n  var successColors = generateColorPalettes(colorSuccessBase);\n  var warningColors = generateColorPalettes(colorWarningBase);\n  var errorColors = generateColorPalettes(colorErrorBase);\n  var infoColors = generateColorPalettes(colorInfoBase);\n  var neutralColors = generateNeutralColorPalettes(colorBgBase, colorTextBase);\n  return _objectSpread(_objectSpread({}, neutralColors), {}, {\n    colorPrimaryBg: primaryColors[1],\n    colorPrimaryBgHover: primaryColors[2],\n    colorPrimaryBorder: primaryColors[3],\n    colorPrimaryBorderHover: primaryColors[4],\n    colorPrimaryHover: primaryColors[5],\n    colorPrimary: primaryColors[6],\n    colorPrimaryActive: primaryColors[7],\n    colorPrimaryTextHover: primaryColors[8],\n    colorPrimaryText: primaryColors[9],\n    colorPrimaryTextActive: primaryColors[10],\n    colorSuccessBg: successColors[1],\n    colorSuccessBgHover: successColors[2],\n    colorSuccessBorder: successColors[3],\n    colorSuccessBorderHover: successColors[4],\n    colorSuccessHover: successColors[5],\n    colorSuccess: successColors[6],\n    colorSuccessActive: successColors[7],\n    colorSuccessTextHover: successColors[8],\n    colorSuccessText: successColors[9],\n    colorSuccessTextActive: successColors[10],\n    colorErrorBg: errorColors[1],\n    colorErrorBgHover: errorColors[2],\n    colorErrorBorder: errorColors[3],\n    colorErrorBorderHover: errorColors[4],\n    colorErrorHover: errorColors[5],\n    colorError: errorColors[6],\n    colorErrorActive: errorColors[7],\n    colorErrorTextHover: errorColors[8],\n    colorErrorText: errorColors[9],\n    colorErrorTextActive: errorColors[10],\n    colorWarningBg: warningColors[1],\n    colorWarningBgHover: warningColors[2],\n    colorWarningBorder: warningColors[3],\n    colorWarningBorderHover: warningColors[4],\n    colorWarningHover: warningColors[5],\n    colorWarning: warningColors[6],\n    colorWarningActive: warningColors[7],\n    colorWarningTextHover: warningColors[8],\n    colorWarningText: warningColors[9],\n    colorWarningTextActive: warningColors[10],\n    colorInfoBg: infoColors[1],\n    colorInfoBgHover: infoColors[2],\n    colorInfoBorder: infoColors[3],\n    colorInfoBorderHover: infoColors[4],\n    colorInfoHover: infoColors[5],\n    colorInfo: infoColors[6],\n    colorInfoActive: infoColors[7],\n    colorInfoTextHover: infoColors[8],\n    colorInfoText: infoColors[9],\n    colorInfoTextActive: infoColors[10],\n    colorBgMask: new TinyColor('#000').setAlpha(0.45).toRgbString(),\n    colorWhite: '#fff'\n  });\n}"],"mappings":"AAAA,SAASA,OAAOA,CAACC,MAAM,EAAEC,cAAc,EAAE;EAAE,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACF,MAAM,CAAC;EAAE,IAAIG,MAAM,CAACC,qBAAqB,EAAE;IAAE,IAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAqB,CAACJ,MAAM,CAAC;IAAEC,cAAc,KAAKI,OAAO,GAAGA,OAAO,CAACC,MAAM,CAAC,UAAUC,GAAG,EAAE;MAAE,OAAOJ,MAAM,CAACK,wBAAwB,CAACR,MAAM,EAAEO,GAAG,CAAC,CAACE,UAAU;IAAE,CAAC,CAAC,CAAC,EAAEP,IAAI,CAACQ,IAAI,CAACC,KAAK,CAACT,IAAI,EAAEG,OAAO,CAAC;EAAE;EAAE,OAAOH,IAAI;AAAE;AAEpV,SAASU,aAAaA,CAACC,MAAM,EAAE;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAAE,IAAIG,MAAM,GAAG,IAAI,IAAIF,SAAS,CAACD,CAAC,CAAC,GAAGC,SAAS,CAACD,CAAC,CAAC,GAAG,CAAC,CAAC;IAAEA,CAAC,GAAG,CAAC,GAAGf,OAAO,CAACI,MAAM,CAACc,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,UAAUC,GAAG,EAAE;MAAEC,eAAe,CAACP,MAAM,EAAEM,GAAG,EAAEF,MAAM,CAACE,GAAG,CAAC,CAAC;IAAE,CAAC,CAAC,GAAGhB,MAAM,CAACkB,yBAAyB,GAAGlB,MAAM,CAACmB,gBAAgB,CAACT,MAAM,EAAEV,MAAM,CAACkB,yBAAyB,CAACJ,MAAM,CAAC,CAAC,GAAGlB,OAAO,CAACI,MAAM,CAACc,MAAM,CAAC,CAAC,CAACC,OAAO,CAAC,UAAUC,GAAG,EAAE;MAAEhB,MAAM,CAACoB,cAAc,CAACV,MAAM,EAAEM,GAAG,EAAEhB,MAAM,CAACK,wBAAwB,CAACS,MAAM,EAAEE,GAAG,CAAC,CAAC;IAAE,CAAC,CAAC;EAAE;EAAE,OAAON,MAAM;AAAE;AAEzf,SAASO,eAAeA,CAACI,GAAG,EAAEL,GAAG,EAAEM,KAAK,EAAE;EAAE,IAAIN,GAAG,IAAIK,GAAG,EAAE;IAAErB,MAAM,CAACoB,cAAc,CAACC,GAAG,EAAEL,GAAG,EAAE;MAAEM,KAAK,EAAEA,KAAK;MAAEhB,UAAU,EAAE,IAAI;MAAEiB,YAAY,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC;EAAE,CAAC,MAAM;IAAEH,GAAG,CAACL,GAAG,CAAC,GAAGM,KAAK;EAAE;EAAE,OAAOD,GAAG;AAAE;AAEhN,SAASI,SAAS,QAAQ,iBAAiB;AAC3C,eAAe,SAASC,gBAAgBA,CAACC,IAAI,EAAEC,IAAI,EAAE;EACnD,IAAIC,qBAAqB,GAAGD,IAAI,CAACC,qBAAqB;IAClDC,4BAA4B,GAAGF,IAAI,CAACE,4BAA4B;EACpE,IAAIC,gBAAgB,GAAGJ,IAAI,CAACK,YAAY;IACpCC,gBAAgB,GAAGN,IAAI,CAACO,YAAY;IACpCC,cAAc,GAAGR,IAAI,CAACS,UAAU;IAChCC,aAAa,GAAGV,IAAI,CAACW,SAAS;IAC9BC,gBAAgB,GAAGZ,IAAI,CAACa,YAAY;IACpCC,WAAW,GAAGd,IAAI,CAACc,WAAW;IAC9BC,aAAa,GAAGf,IAAI,CAACe,aAAa;EACtC,IAAIC,aAAa,GAAGd,qBAAqB,CAACU,gBAAgB,CAAC;EAC3D,IAAIK,aAAa,GAAGf,qBAAqB,CAACE,gBAAgB,CAAC;EAC3D,IAAIc,aAAa,GAAGhB,qBAAqB,CAACI,gBAAgB,CAAC;EAC3D,IAAIa,WAAW,GAAGjB,qBAAqB,CAACM,cAAc,CAAC;EACvD,IAAIY,UAAU,GAAGlB,qBAAqB,CAACQ,aAAa,CAAC;EACrD,IAAIW,aAAa,GAAGlB,4BAA4B,CAACW,WAAW,EAAEC,aAAa,CAAC;EAC5E,OAAOjC,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEuC,aAAa,CAAC,EAAE,CAAC,CAAC,EAAE;IACzDC,cAAc,EAAEN,aAAa,CAAC,CAAC,CAAC;IAChCO,mBAAmB,EAAEP,aAAa,CAAC,CAAC,CAAC;IACrCQ,kBAAkB,EAAER,aAAa,CAAC,CAAC,CAAC;IACpCS,uBAAuB,EAAET,aAAa,CAAC,CAAC,CAAC;IACzCU,iBAAiB,EAAEV,aAAa,CAAC,CAAC,CAAC;IACnCH,YAAY,EAAEG,aAAa,CAAC,CAAC,CAAC;IAC9BW,kBAAkB,EAAEX,aAAa,CAAC,CAAC,CAAC;IACpCY,qBAAqB,EAAEZ,aAAa,CAAC,CAAC,CAAC;IACvCa,gBAAgB,EAAEb,aAAa,CAAC,CAAC,CAAC;IAClCc,sBAAsB,EAAEd,aAAa,CAAC,EAAE,CAAC;IACzCe,cAAc,EAAEd,aAAa,CAAC,CAAC,CAAC;IAChCe,mBAAmB,EAAEf,aAAa,CAAC,CAAC,CAAC;IACrCgB,kBAAkB,EAAEhB,aAAa,CAAC,CAAC,CAAC;IACpCiB,uBAAuB,EAAEjB,aAAa,CAAC,CAAC,CAAC;IACzCkB,iBAAiB,EAAElB,aAAa,CAAC,CAAC,CAAC;IACnCZ,YAAY,EAAEY,aAAa,CAAC,CAAC,CAAC;IAC9BmB,kBAAkB,EAAEnB,aAAa,CAAC,CAAC,CAAC;IACpCoB,qBAAqB,EAAEpB,aAAa,CAAC,CAAC,CAAC;IACvCqB,gBAAgB,EAAErB,aAAa,CAAC,CAAC,CAAC;IAClCsB,sBAAsB,EAAEtB,aAAa,CAAC,EAAE,CAAC;IACzCuB,YAAY,EAAErB,WAAW,CAAC,CAAC,CAAC;IAC5BsB,iBAAiB,EAAEtB,WAAW,CAAC,CAAC,CAAC;IACjCuB,gBAAgB,EAAEvB,WAAW,CAAC,CAAC,CAAC;IAChCwB,qBAAqB,EAAExB,WAAW,CAAC,CAAC,CAAC;IACrCyB,eAAe,EAAEzB,WAAW,CAAC,CAAC,CAAC;IAC/BV,UAAU,EAAEU,WAAW,CAAC,CAAC,CAAC;IAC1B0B,gBAAgB,EAAE1B,WAAW,CAAC,CAAC,CAAC;IAChC2B,mBAAmB,EAAE3B,WAAW,CAAC,CAAC,CAAC;IACnC4B,cAAc,EAAE5B,WAAW,CAAC,CAAC,CAAC;IAC9B6B,oBAAoB,EAAE7B,WAAW,CAAC,EAAE,CAAC;IACrC8B,cAAc,EAAE/B,aAAa,CAAC,CAAC,CAAC;IAChCgC,mBAAmB,EAAEhC,aAAa,CAAC,CAAC,CAAC;IACrCiC,kBAAkB,EAAEjC,aAAa,CAAC,CAAC,CAAC;IACpCkC,uBAAuB,EAAElC,aAAa,CAAC,CAAC,CAAC;IACzCmC,iBAAiB,EAAEnC,aAAa,CAAC,CAAC,CAAC;IACnCX,YAAY,EAAEW,aAAa,CAAC,CAAC,CAAC;IAC9BoC,kBAAkB,EAAEpC,aAAa,CAAC,CAAC,CAAC;IACpCqC,qBAAqB,EAAErC,aAAa,CAAC,CAAC,CAAC;IACvCsC,gBAAgB,EAAEtC,aAAa,CAAC,CAAC,CAAC;IAClCuC,sBAAsB,EAAEvC,aAAa,CAAC,EAAE,CAAC;IACzCwC,WAAW,EAAEtC,UAAU,CAAC,CAAC,CAAC;IAC1BuC,gBAAgB,EAAEvC,UAAU,CAAC,CAAC,CAAC;IAC/BwC,eAAe,EAAExC,UAAU,CAAC,CAAC,CAAC;IAC9ByC,oBAAoB,EAAEzC,UAAU,CAAC,CAAC,CAAC;IACnC0C,cAAc,EAAE1C,UAAU,CAAC,CAAC,CAAC;IAC7BT,SAAS,EAAES,UAAU,CAAC,CAAC,CAAC;IACxB2C,eAAe,EAAE3C,UAAU,CAAC,CAAC,CAAC;IAC9B4C,kBAAkB,EAAE5C,UAAU,CAAC,CAAC,CAAC;IACjC6C,aAAa,EAAE7C,UAAU,CAAC,CAAC,CAAC;IAC5B8C,mBAAmB,EAAE9C,UAAU,CAAC,EAAE,CAAC;IACnC+C,WAAW,EAAE,IAAIrE,SAAS,CAAC,MAAM,CAAC,CAACsE,QAAQ,CAAC,IAAI,CAAC,CAACC,WAAW,EAAE;IAC/DC,UAAU,EAAE;EACd,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}