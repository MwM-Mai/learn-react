{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86188\\\\Desktop\\\\code-react\\\\14-learn-hooks\\\\src\\\\09-useImperativeHandle\\\\02-useImperativeHandle\\u4F7F\\u7528.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { forwardRef, useImperativeHandle, useRef } from 'react';\n\n// useImperativeHandle 可以控制父组件通过ref 来调用哪些方法之类的 \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HYInput = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n  const inputRef = useRef();\n\n  // 参数1: ref 参数2: 回调函数 返回一个对象\n  useImperativeHandle(ref, () => ({\n    focus: () => {\n      console.log('useImperativeHandle中的回调函数返回对象的focus方法');\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    ref: ref,\n    type: \"text\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n}, \"Ag7bjDUBywlCYPNfrolbitV68Mw=\")), \"Ag7bjDUBywlCYPNfrolbitV68Mw=\");\n_c2 = HYInput;\nexport default function ImperativeHandleHook() {\n  _s2();\n  const inputRef = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HYInput, {\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => inputRef.current.focus(),\n      children: \"\\u805A\\u7126\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s2(ImperativeHandleHook, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n_c3 = ImperativeHandleHook;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"HYInput$forwardRef\");\n$RefreshReg$(_c2, \"HYInput\");\n$RefreshReg$(_c3, \"ImperativeHandleHook\");","map":{"version":3,"names":["React","forwardRef","useImperativeHandle","useRef","jsxDEV","_jsxDEV","HYInput","_s","_c","props","ref","inputRef","focus","console","log","type","fileName","_jsxFileName","lineNumber","columnNumber","_c2","ImperativeHandleHook","_s2","children","onClick","e","current","_c3","$RefreshReg$"],"sources":["C:/Users/86188/Desktop/code-react/14-learn-hooks/src/09-useImperativeHandle/02-useImperativeHandle使用.js"],"sourcesContent":["import React, { forwardRef, useImperativeHandle, useRef } from 'react'\r\n\r\n// useImperativeHandle 可以控制父组件通过ref 来调用哪些方法之类的 \r\n\r\nconst HYInput = forwardRef((props, ref) => {\r\n\r\n  const inputRef = useRef()\r\n\r\n  // 参数1: ref 参数2: 回调函数 返回一个对象\r\n  useImperativeHandle(ref, () => ({\r\n    focus: () => {\r\n      console.log('useImperativeHandle中的回调函数返回对象的focus方法');\r\n    }\r\n  }))\r\n\r\n  return <input ref={ref} type=\"text\" />\r\n})\r\n\r\n\r\nexport default function ImperativeHandleHook() {\r\n  const inputRef = useRef()\r\n\r\n  return (\r\n    <div>\r\n      <HYInput ref={inputRef} />\r\n      <button onClick={e => inputRef.current.focus()}>聚焦</button>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,mBAAmB,EAAEC,MAAM,QAAQ,OAAO;;AAEtE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,gBAAAC,EAAA,eAAGN,UAAU,CAAAO,EAAA,GAAAD,EAAA,CAAC,CAACE,KAAK,EAAEC,GAAG,KAAK;EAAAH,EAAA;EAEzC,MAAMI,QAAQ,GAAGR,MAAM,EAAE;;EAEzB;EACAD,mBAAmB,CAACQ,GAAG,EAAE,OAAO;IAC9BE,KAAK,EAAEA,CAAA,KAAM;MACXC,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;IACtD;EACF,CAAC,CAAC,CAAC;EAEH,oBAAOT,OAAA;IAAOK,GAAG,EAAEA,GAAI;IAACK,IAAI,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACxC,CAAC,kCAAC;AAAAC,GAAA,GAZId,OAAO;AAeb,eAAe,SAASe,oBAAoBA,CAAA,EAAG;EAAAC,GAAA;EAC7C,MAAMX,QAAQ,GAAGR,MAAM,EAAE;EAEzB,oBACEE,OAAA;IAAAkB,QAAA,gBACElB,OAAA,CAACC,OAAO;MAACI,GAAG,EAAEC;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC1Bd,OAAA;MAAQmB,OAAO,EAAEC,CAAC,IAAId,QAAQ,CAACe,OAAO,CAACd,KAAK,EAAG;MAAAW,QAAA,EAAC;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACvD;AAEV;AAACG,GAAA,CATuBD,oBAAoB;AAAAM,GAAA,GAApBN,oBAAoB;AAAA,IAAAb,EAAA,EAAAY,GAAA,EAAAO,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAR,GAAA;AAAAQ,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}