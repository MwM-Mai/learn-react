{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86188\\\\Desktop\\\\code-react\\\\14-learn-hooks\\\\src\\\\06-useCallback\\u4F7F\\u7528\\\\01-useCallback\\u4E0D\\u80FD\\u8FDB\\u884C\\u7684\\u6027\\u80FD\\u4F18\\u5316.js\",\n  _s = $RefreshSig$();\n// useCallback 的实际目的是为了进行性能优化\n// useCallback 会返回一个函数memoized(记忆的)值\n// 在依赖不变的情况下, 多次定义的时候, 返回的值相同\n\nimport React, { useCallback, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CallbackHookDemo01() {\n  _s();\n  const [count, setCount] = useState(0);\n  const increment1 = () => {\n    console.log(\"执行increment1函数\");\n    setCount(count + 1);\n  };\n  const increment2 = useCallback(() => {\n    console.log(\"执行increment2函数\");\n    // 如果第二个参数是空数组 ,那么会形成一个闭包 count 一直都是指向的是 外部 count 初始化的值 0 \n    setCount(count + 1);\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"CallbackHookDemo01\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment1,\n      children: \"+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment2,\n      children: \"+2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(CallbackHookDemo01, \"NyiuNWSsl667Ol1iRodg6DmYE0c=\");\n_c = CallbackHookDemo01;\nvar _c;\n$RefreshReg$(_c, \"CallbackHookDemo01\");","map":{"version":3,"names":["React","useCallback","useState","jsxDEV","_jsxDEV","CallbackHookDemo01","_s","count","setCount","increment1","console","log","increment2","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/86188/Desktop/code-react/14-learn-hooks/src/06-useCallback使用/01-useCallback不能进行的性能优化.js"],"sourcesContent":["// useCallback 的实际目的是为了进行性能优化\r\n// useCallback 会返回一个函数memoized(记忆的)值\r\n// 在依赖不变的情况下, 多次定义的时候, 返回的值相同\r\n\r\nimport React, { useCallback, useState } from 'react'\r\n\r\nexport default function CallbackHookDemo01() {\r\n\r\n  const [count, setCount] = useState(0)\r\n\r\n  const increment1 = () => {\r\n    console.log(\"执行increment1函数\");\r\n    setCount(count + 1)\r\n  }\r\n\r\n  const increment2 = useCallback(() => {\r\n    console.log(\"执行increment2函数\");\r\n    // 如果第二个参数是空数组 ,那么会形成一个闭包 count 一直都是指向的是 外部 count 初始化的值 0 \r\n    setCount(count + 1)\r\n  }, [count])\r\n\r\n  return (\r\n    <div>\r\n      <h2>CallbackHookDemo01</h2>\r\n      <h2>{count}</h2>\r\n      <button onClick={increment1}>+1</button>\r\n      <button onClick={increment2}>+2</button>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAE3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMO,UAAU,GAAGA,CAAA,KAAM;IACvBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BH,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EAED,MAAMK,UAAU,GAAGX,WAAW,CAAC,MAAM;IACnCS,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7B;IACAH,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC3Bb,OAAA;MAAAS,QAAA,EAAKN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAChBb,OAAA;MAAQc,OAAO,EAAET,UAAW;MAAAI,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACxCb,OAAA;MAAQc,OAAO,EAAEN,UAAW;MAAAC,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpC;AAEV;AAACX,EAAA,CAvBuBD,kBAAkB;AAAAc,EAAA,GAAlBd,kBAAkB;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}